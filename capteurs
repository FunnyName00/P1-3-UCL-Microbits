# Imports go at the top
from microbit import *

def climat():
    display.show(temperature(), delay=900, loop=True)

def lumiere():
    while True:
        if display.read_light_level() > 1:
            display.show(Image('60606:'
                               '08980:'
                               '69996:'
                               '08980:'
                               '60606'))
        else:
            display.show(Image('07886:'
                               '79900:'
                               '99000:'
                               '79900:'
                               '07886'))

def son():
    # Fonction pour mapper les plages de nombres
    def nombre(value, fromMin, fromMax, toMin, toMax):
        fromRange = fromMax - fromMin
        toRange = toMax - toMin
        valueScaled = float(value - fromMin) / float(fromRange)
        return toMin + (valueScaled * toRange)
    
    # Diagrammes de niveaux sonores
    graph5 = Image("99999:"
                   "99999:"
                   "99999:"
                   "99999:"
                   "99999")
    
    graph4 = Image("44444:"
                   "99999:"
                   "99999:"
                   "99999:"
                   "99999")
    
    graph3 = Image("00000:"
                   "55555:"
                   "99999:"
                   "99999:"
                   "99999")
    
    graph2 = Image("00000:"
                   "00000:"
                   "55555:"
                   "99999:"
                   "99999")
    
    graph1 = Image("00000:"
                   "00000:"
                   "00000:"
                   "55555:"
                   "99999")
    
    graph0 = Image("00000:"
                   "00000:"
                   "00000:"
                   "00000:"
                   "00000")
    
    allGraphs = [graph0, graph1, graph2, graph3, graph4, graph5]
    
    # Ignorer la première lecture du niveau sonore
    soundLevel = microphone.sound_level()
    sleep(200)
    
    while True:
        # Lire le niveau sonore et augmenter sa sensibilité
        rawSoundLevel = microphone.sound_level()
        
        # Augmenter la sensibilité : amplifier les niveaux
        amplifiedSoundLevel = int(nombre(rawSoundLevel, 0, 255, 0, 15))
        
        # Limiter le niveau à l'échelle des graphiques (0 à 5)
        soundLevel = min(amplifiedSoundLevel // 3, 5)  # Diviser par 3 pour ajuster les plages
        
        # Afficher le graphique correspondant
        display.show(allGraphs[soundLevel])
        
